# May 25, 2016
#
# ANGES preliminary master script configuration file
#
# Usage: python master.py ../data/configuration_file
# configuration_file is a file formatted as below
#
# -------------------- Debug -----------------------
debug = None
#
# ------------------ Input files --------------------
# Where to read the data: homologous_families directory and species_tree directory
# Syntax: homologous_families <file_directory>
#         or
#         species_tree <file_directory>
#
homologous_families = "../data/GAMBIA_families_500"
species_tree = "../data/GAMBIA_species_pairs"
tree_file = "../data/SPECIES_TREE_BURKHOLDERIA_1"

acs_file = ""


#
# ---------------- END Input files ------------------
#
# ------------- Output directory name ---------------
# Where to save the output file
# Syntax: output_directory = <output_directory>
#
output_directory = "../output/RESULTS_MWM"
output_c1p = "../output/RESULTS_BURKHOLDERIA_C1P"
output_ancestor = "BANC1" # name of the ancestor to infer
#
# ----------- END Output directory name -------------
#
# ---------------- Markers options ------------------
# Markers parameters
# Syntax: <parameter_name> = <int>
#         or
#         <parameter_name> = <[list_of_int]>
#
markers_doubled = 0
                     # 0 = original markers
                     # 1 = doubled markers

markers_unique = 1 
                     # 0 = repeated markers allowed
                     # 1 = ingroup unique
                     # 2 = unique

markers_universal = 2
                     # 0 = missing markers allowed
                     # 1 = ingroup universal
                     # 2 = universal

markers_overlap = 1
                     # 0 = do not returns a list of overlapping markers
                     # 1 = returns a list of overlapping markers

filter_copy_number = 0
                     # 0 ... N (where N is a natural number)
                     # use 0 if you do not want to filter 
filter_by_id = [] # [a,b,c,d,...,z] (where a,b,c,d,...,z are natural numbers, ID numbers) 

all_match = False

# ------------------ END Markers --------------------

# --- ACS options -----------------------------------------

#acs_pairs PAIRS  [ACS_SPECIES_PAIRS_FILE_NAME] # name of file containing the species pairs to compare

compute_acs = 0      # 0 = adjacencies provided 1 = compute adjacencies

acs_sa = 1
                     # supported adjacencies: 0 = not computed, 1 = computed
acs_ra = 0           
                     # reliable adjacencies: 0 = not computed, 1 = computed
acs_sci = 0
                     # strong common intervals: 0 = not computed, 1 = computed 
acs_mci = 0 
                     # maximal common intervals: 0 = not computed, 1 = computed
acs_aci = 0 
                     # all common intervals: 0 = not computed, 1 = computed
acs_weight = 1
                     # weighting ACS: 1 = linear interpolation - CURRENTLY MANDATORY
acs_correction = 0
       #acs_correction [0/1/2]    # Correcting for missing markers: 0 = none, 1 = adding markers spanned by intervals, 2 = X



markers_provided = True
species_tree_provided = True
acs_file_provided = False
acs_pairs_provided = False       # True if file provided


# ---------------- END ACS options ------------------


# ------------------- C1P model ---------------------

c1p_linear = 0   # 1 for working with linear chromosomes
c1p_circular = 1 # 1 for working with a unique circular chromosomes

# ---------------- END C1P model --------------------

# ---------- Telomeres (model+optimization) ---------

c1p_telomeres = 0 # CURRENTLY NOT IMPLEMENTED

# -------- END Telomeres (model+optimization) -------

# ----------- C1P optimization options --------------
c1p_heuristic = 1    
                     # Using a greedy heuristic
c1p_bab = 0          
                     # Using a branch-and-bound
c1p_spectral = 0     
                     # Using spectral seriation CURRENTLY NOT IMPLEMENTED
c1p_spectral_alpha = 0
# --------- END C1P optimization options ------------


# ---------------------- END ------------------------
